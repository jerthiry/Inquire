#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language french
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip bigskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
\paragraph_spacing onehalf
Conception et création d'une application web de gestion de sondages : 
\emph on
inQuire
\end_layout

\begin_layout Author
\paragraph_spacing onehalf
Groupe 5 - Thiry Jérôme & Vermeiren Rémy
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section*
\paragraph_spacing onehalf
Introduction
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
Ce rapport concerne le projet d'approfoncidssement en sciences informatiques,
 mis en route dans le contexte du cours LSINF1212 dispensé à l'Université
 Catholique de Louvain.
 Il nous a été demandé de concevoir une application web dont le but était
 laissé au choix.
 Nous avons donc décidé de créer une application de gestion de sondages
 qui permettrait, entre autres, de créer, remplir et gérer des sondages
 en ligne, ainsi que d'en voir les résultats.
 Ce rapport a pour but d'expliquer les différentes étapes de la création
 de cette application, de la phase d'analyse, en passant par sa conception
 jusqu'à son implémentation en elle-même.
 Le code complet de l'application est disponible sur 
\begin_inset CommandInset href
LatexCommand href
target "https://github.com/jerthiry/inquire"

\end_inset

.
\end_layout

\begin_layout Section
\paragraph_spacing onehalf
Phase d'analyse
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
Comme dans tout projet, celui-ci a commencé par une phase d'analyse.
 Celle-ci a été entre autres réalisée en utilisant le développement par
 comportements, et, en particulier, en accord en accord la convention 
\emph on
cucumber
\emph default
 dont l'algorithme 1 donne un extrait d'un exemple décrit en début de projet,
 et qui concerne la création de sondage.
 Ces différents travaux nous ont permis de cerner plusieurs besoins.
\end_layout

\begin_layout Standard
On peut par exemple citer le fait que l'utilisateur doive être connecté
 afin de pouvoir créer un sondage.
 En effet, les résultats d'un sondage n'étant accessibles que par son créateur,
 il était nécessaire de faire ce choix.
\end_layout

\begin_layout Standard
Citons encore le fait de pouvoir avoir des sondages publics mais aussi des
 sondages privés.
 Cela nous semblait important car les besoins sont multiples.
 Une enquête entre amis n'a pas la même ampleur qu'une enquête pour une
 étude, par exemple.
 Cependant, nous avons été amené, après réflexion, à autoriser les utilisateurs
 non connectés à pouvoir remplir un sondage.
 Cela est moins contraignant pour l'utilisateur et permet donc plus de flexibili
té.
 Un bon compromis entre ces deux choix a été de ne pas reprendre les sondages
 privés sur la page principale.
 Ils ne sont donc accessibles qu'à partir du permalink leur correspondant.
 Il en va de même si la date de clotûre du sondage est dépassée.
\end_layout

\begin_layout Standard
Il nous a aussi semblé important de permettre aux utilisateurs de modifier
 leurs données personnelles, de pouvoir avoir une vue d'ensemble sur leurs
 sondages, ainsi que de proposer à tous les visiteurs du site une liste
 des sondages publics les plus récents.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Screenshot from 2015-05-17 11:32:24.png
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
BDD - Création de sondage
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
\paragraph_spacing onehalf
Choix de conception
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
Cette section décrit les choix de conception, et entre autres l'architecture
 du système.
 Le système se base sur plusieurs technologies qui s'occupent de différentes
 parties du système.
\end_layout

\begin_layout Standard
L'application se divise en trois couches importantes.
 En premier lieu, nous trouvons la couche utilisateur, qui gère l'affichage
 et envoie des requêtes au serveur.
 Ensuite vient le noyau de l'application, qui gère les requêtes et, enfin,
 la couche base de données, implémentée en MongoDB, un type de bases de
 données non-relationnelles, qui stocke les données sous forme d'objet en
 Javascript.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename database.png
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Couches de l'application
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\paragraph_spacing onehalf
Couche utilisateur : HTML, CSS, Javascript, Hogan
\end_layout

\begin_layout Standard
Le dossier 
\emph on
views 
\emph default
contient des fichiers qui gèrent l'affichage de l'application dans le navigateur
, entre autres les différentes pages HTML affichées sur le site.
 Ces pages utilisent le CSS de Bootstrap.
 Certaines pages HTML ne sont pas des pages complètes puisqu'elles ne servent
 qu'à venir s'insérer dans une autre page HTML.
 On trouve aussi les images (logos, background, ...) dans le dossier images,
 ainsi que des scripts Javascript, utiles pour changer de contenu dynamiquement
 en fonction des choix de l'utilisateur, notamment lors du choix du type
 de question à créer lors de l'initialisation d'un questionnaire.
\end_layout

\begin_layout Standard
Les pages HTML reçoivent des arguments lorsque le serveur indique qu'il
 faut les interpréter, qui sont alors affichés dans la page grâce à un outil
 de 
\emph on
templating
\emph default
, Hogan.js.
\end_layout

\begin_layout Subsection
\paragraph_spacing onehalf
Noyau de l'application : Node.js
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
Le noyau de l'application a été implémentée grâce à Javascript et Node.js.
 Celui-ci gère plusieurs opérations, dont entre autres :
\end_layout

\begin_layout Itemize
\paragraph_spacing single
\noindent
Dans app.js :
\end_layout

\begin_deeper
\begin_layout Itemize
\paragraph_spacing single
\noindent
Le lancement du serveur ;
\end_layout

\begin_layout Itemize
\paragraph_spacing single
\noindent
La liaison avec la base de données.
\end_layout

\end_deeper
\begin_layout Itemize
\paragraph_spacing single
\noindent
Dans le dossier routes : 
\end_layout

\begin_deeper
\begin_layout Itemize
\paragraph_spacing single
\noindent
Le routage des différentes pages de l'application, implémenté avec l'aide
 du module 
\emph on
Express
\emph default
 ;
\end_layout

\begin_layout Itemize
\paragraph_spacing single
\noindent
La gestion des requêtes GET et POST sur le serveur, c'est-à-dire les fonctions
 appelées lorsque l'on afficher une page (on peut alors l'interpréter et
 notamment lui passer des variables grâce à Hogan), où que l'on clique sur
 tel ou tel bouton par exemple.
 C'est ici aussi que l'on trouvera les appels aux fonctions du dossier persisten
ce.
\end_layout

\end_deeper
\begin_layout Subsection
\paragraph_spacing onehalf
Couche base de données
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
Les fichiers constituant la couche base de données se trouvent dans le dossier
 
\emph on
persistence.
 
\emph default
Ceux-ci contiennent les fonctions qui interagissent directement avec la
 base de données.
 Il existe un fichier par type d'objets que l'on peut retrouver dans la
 base de données (utilisateurs, sessions, questionnaires et réponses).
 On y trouve aussi bien des fonctions d'insertion que de récupération ou
 de mise à jour.
\end_layout

\begin_layout Section
Choix d'implémentation du système
\end_layout

\begin_layout Standard
Dans cette section sont expliqués nos choix d'implémentation.
 Nous ne reprenons évidemment que les choix importants, ou ceux qui nous
 semblent moins évidents.
\end_layout

\begin_layout Subsection
Base de données
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename MongoDBDiagram (3).png
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Diagramme de la base de données
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La base de données étant implémentée sur base d'objets Javascript (voir
 la figure 2), elle est très flexible d'utilisation.
 Nous avons cependant du faire certains choix qui nous semblaient pertinents.
\end_layout

\begin_layout Standard
En premier lieu, nous avons décidé de séparer les objets questionnaires
 et réponses.
 Nous aurions pu rajouter les réponses à l'objet questionnaire à chaque
 nouvelle soumission, mais cela n'aurait pas été idéal.
 En effet, si le sondage est un minimum populaire, cela signifie qu'il faudrait
 pouvoir écrire sur l'objet constamment, ce qui engendrerait des risques
 de corruption ou, au mieux, de ralentissement.
 De plus, la suppression des réponses (pas encore implémentée mais imaginable
 dans le futur) ne s'en trouve que simplifiée.
\end_layout

\begin_layout Standard
Ensuite, le fait que le 
\emph on
templating
\emph default
 HTML se fasse avec Hogan.js nous a contraints à rajouter des propriétés
 à l'objet questionnaire.
 En effet, Hogan.js ne peut gérer que des conditions binaires (booléennes).
 Comme l'affichage d'une question diffère selon son type, il a fallu rajouter
 des champs 
\emph on
isCheck
\emph default
, 
\emph on
isRadio
\emph default
 et 
\emph on
isText 
\emph default
afin de savoir, par exemple, s'il faut afficher des boutons radio ou des
 cases à cocher (choix simple ou multiple).
\end_layout

\begin_layout Subsection
Node.js
\end_layout

\begin_layout Standard
Nous 
\end_layout

\end_body
\end_document
